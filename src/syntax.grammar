/**
 * All block comments are pasted directly from
 * https://code.jsoftware.com/wiki/Vocabulary/Words
 */

@top Program {
  "" | sentence (newline sentence)* newline?
}

@skip { space | LineComment }

sentence {
  expression*
}

expression {
  word |
  ParenthesizedExpression { "(" sentence ")" } |
  DirectDefinition { "{{" sentence "}}" }
}

word {
  String |
  Graphic |
  Name |
  ControlName |
  /**
   * A sequence of numbers separated by whitespace is treated as a single word
   */
  // Ignored this to avoid shift/reduce conflict. Still highlights the same
  Number
}

@tokens {
  LineComment { "NB." ![\n]* }
  @precedence { LineComment, Name }

  /**
   * An apostrophe (') starts a string which continues to the next apostrophe.
   * After the first apostrophe (i.e. inside a string), two consecutive
   * apostrophes stand for one apostrophe character
   */
  String { "'" (!['] | "''")* "'" }

  /**
   * Users may assign a name to an object which they create, according to these rules:
   *  - It is a string of characters,
   *  - Beginning with an upper or lower-case letter,
   *  - Possibly followed by other letters and/or digits,
   *  - And may include embedded single underscores (not consecutive and not trailing),
   * An alphabetic starts a name, which contains all the ensuing consecutive
   * alphabetics, numerics and underscores. It may be inflected, e.g. (a:).
   * A name may not end in a single underscore unless it is a valid locative.
   */
  // I've ignored the underscore conditions
  Name { $[a-zA-Z] $[a-zA-Z0-9_]* $[:.]* }

  // Just highlight the control features for now. No need for actual parsing
  ControlName {
    "do." | "end." |
    "assert." | "break." | "continue." |
    "else." | "elseif." | "for." |
    ("for" | "goto" | "label") "_" $[a-zA-Z] $[a-zA-Z0-9_]* "." |
    "if." | "return." | "select." | "case." | "fcase." |
    "throw." | "try." | "catch." | "catchd." | "catcht." | "while." | "whilst."
  }

  @precedence { ControlName, Name }

  /**
   * A graphic such as (+) is a word in itself. However it may be inflected, e.g. (+:)
   * graphic:  !"#$%&*+,-./:;<=>?@[\]^_`{|}~
   */
  // Underscore ("_") removed due to overlap with Number
  Graphic { $[!"#$%&*+,-./:;<=>?@[\\\]^`{|}~] $[:.]* }
  @precedence { "{{", Graphic }
  @precedence { "}}", Graphic }

  /**
   * A numeric or underscore starts a number, which contains all the ensuing
   * consecutive alphabetics, numerics, underscores and periods.
   *
   *  - J recognises these character-sequences as valid words:  
   *      _: _. 0: 1: 2: 3: 4: 5: 6: 7: 8: 9: _0: _1: _2: _3: _4: _5: _6: _7: _8: _9:
   *  - Apart from these exceptions, a number may not be inflected
   */
  // I've ignored the "may not be inflected" condition
  Number { $[0-9_] $[a-zA-Z0-9_.]* ":"* }

  /**
   * A character outside the printable ASCII range (32 thru 127) is a single word.
   */
  // I've ignored unprintable ASCII

  /**
   * whitespace: includes sequences of space (ASCII 32) and/or TAB (ASCII 9),
   * but excludes newline/linefeed/LF (ASCII 10)
   */
  space { $[ \t]+ }

  newline { "\n" }

  "(" ")"
  "{{" "}}"
}

@detectDelim
